@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
   @if (SignInManager.IsSignedIn(User))
    {
        var userInfo = await UserManager.GetUserAsync(User);
        ViewBag.CurrentUser = userInfo;
    }
   
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
     
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-action="Info" asp-controller="Account" title="Manage">@ViewBag.CurrentUser.EmplName</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-action="Info" asp-controller="Account" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-action="Logout" asp-controller="Account" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-action="Register" asp-controller="Account">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-action="Login" asp-controller="Account">Login</a>
        </li>
    }
</ul>
